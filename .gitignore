/users/HELP.md
/users/.gradle
/users/build/
/users/!gradle/wrapper/gradle-wrapper.jar
/users/!**/src/main/**/build/
/users/!**/src/test/**/build/

### STS ###
/users/.apt_generated
/users/.classpath
/users/.factorypath
/users/.project
/users/.settings
/users/.springBeans
/users/.sts4-cache
/users/bin/
/users/!**/src/main/**/bin/
/users/!**/src/test/**/bin/

### IntelliJ IDEA ###
/users/.idea
/users/*.iws
/users/*.iml
/users/*.ipr
/users/out/
/users/!**/src/main/**/out/
/users/!**/src/test/**/out/

### NetBeans ###
/users/nbproject/private/
/users/nbbuild/
/users/dist/
/users/nbdist/
/users/.nb-gradle/

### VS Code ###
/users/.vscode/

### Kotlin ###
/users/.kotlin

/users/.env

.idea
/.idea

### Terraform ###
# Local .terraform directories
**/.terraform/*

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version
# control as they are data points which are potentially sensitive and subject
# to change depending on the environment.
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc

# End of https://www.toptal.com/developers/gitignore/api/intellij,terraform
